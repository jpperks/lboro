#define _CRT_SECURE_NO_WARNINGS
#define height 128
#define width 256              /* Set the height, width and colour depth up here...*/
#define colour 255
#pragma warning ( disable : 4244 )

#include <stdio.h>
#include <math.h>
#define PI 3.14159265



int main()
{

	//=============================================================
	//                                                            
	//           SET PPM FILE HEADER AND ARRAY TO '0'                    
	//
	//=============================================================




	int numbers[height][width][3];              /* Initialising variables and writing top entries to the file...*/


	FILE *pfile = NULL;
	pfile = fopen("myimage.ppm", "w");
	fprintf(pfile, "P3\n");
	fprintf(pfile, "# myimage.ppm\n");
	fprintf(pfile, "%d %d\n", width, height);
	fprintf(pfile, "%d\n", colour);




	int i, j, z;                    /* Setting all the values of the array i = Y axis j = X axis z = Colour type (RGB)*/

	for (i = 0; i < height; i++)
	{
		for (j = 0; j < width; j++)
		{
			for (z = 0; z < 3; z++)
			{
				numbers[i][j][z] = 0;
			}
		}
	}

	//=============================================================
	//                                                            
	//                      DRAW AXIS LINES                     
	//
	//=============================================================



	/*Set Y Axis Line*/

	{
		int y, w;           /*y = y axis level, w = axis line width (2px)*/

		for (y = 8; y < 109; y++)
		{
			for (w = 37; w < 39; w++)
			{
				numbers[y][w][0] = 255;
				numbers[y][w][1] = 255;
				numbers[y][w][2] = 255;
			}
		}

	}


	/*Set X Axis Line*/

	{
		int x, w;           /*x = x axis level, w = axis line width (2px)*/

		for (x = 37; x < 219; x++)
		{
			for (w = 109; w < 111; w++)
			{
				numbers[w][x][0] = 255;
				numbers[w][x][1] = 255;
				numbers[w][x][2] = 255;
			}
		}

	}

	/*Set X Axis Centre Line*/

	{
		int x;           /*x = x axis level*/

		for (x = 39; x < 219; x++)
		{

			numbers[58][x][0] = 168;
			numbers[58][x][1] = 177;
			numbers[58][x][2] = 181;
		}

	}



	//=============================================================
	//                                                            
	//                     DRAW AXIS TICKS                     
	//
	//=============================================================



	/*Y Axis Ticks*/

	{
		int x;
		for (x = 35; x < 37; x++)      
		{
			numbers[18][x][0] = 255; //====================
			numbers[18][x][1] = 255; // '1' Value Tick
			numbers[18][x][2] = 255; //====================
			numbers[58][x][0] = 255; //====================
			numbers[58][x][1] = 255; // '0.5' value Tick
			numbers[58][x][2] = 255; //====================
			numbers[98][x][0] = 255; //====================
			numbers[98][x][1] = 255; // '-1' value Tick
			numbers[98][x][2] = 255; //====================
		}
	}


	/*X Axis Ticks */

	{
		int y;
		for (y = 111; y < 113; y++)   
		{
			numbers[y][39][0] = 255;  //========================
			numbers[y][39][1] = 255;  // '0 deg' value Tick
			numbers[y][39][2] = 255;  //========================
			numbers[y][83][0] = 255;  //========================
			numbers[y][83][1] = 255;  // '180 deg' value Tick
			numbers[y][83][2] = 255;  //========================
			numbers[y][128][0] = 255; //========================
			numbers[y][128][1] = 255; // '360 deg' value Tick
			numbers[y][128][2] = 255; //========================
			numbers[y][173][0] = 255; //========================
			numbers[y][173][1] = 255; // '540 deg' value Tick
			numbers[y][173][2] = 255; //========================
			numbers[y][218][0] = 255; //========================
			numbers[y][218][1] = 255; // '720 deg' value Tick
			numbers[y][218][2] = 255; //========================
		}
	}

	//=============================================================
	//                                                            
	//                       Y AXIS NUMBERS             
	//
	//=============================================================


	/*  #1.0  */

	{
		int c;
		for (c = 0; c < 3; c++)        
		{
			// #1
			numbers[15][26][c] = 171;
			numbers[16][26][c] = 171;
			numbers[17][26][c] = 171;
			numbers[18][26][c] = 171;
			// .
			numbers[18][28][c] = 171;
			// #0
			numbers[15][30][c] = 171;
			numbers[15][31][c] = 171;
			numbers[15][32][c] = 171;
			numbers[16][30][c] = 171;
			numbers[17][30][c] = 171;
			numbers[18][30][c] = 171;
			numbers[16][32][c] = 171;
			numbers[17][32][c] = 171;
			numbers[18][32][c] = 171;
			numbers[18][30][c] = 171;
			numbers[18][31][c] = 171;
			numbers[18][32][c] = 171;
		}
	}












	/*ADDITONAL STUFF GOES UNDER HERE */


	{
		int t = 1;
		int sr, offt, offs;
		double val;

		val = PI / 180;

		

		offt = 39;
		offs = 58;

		while (t <= 720)
		{
			
			
			sr = roundf(40 * sin(t*val));
			numbers[offs - sr][offt + (t / 4)][0] = 255;
			numbers[offs - sr][offt + (t / 4)][1] = 0;
			numbers[offs - sr][offt + (t / 4)][2] = 0;

			t = t + 4;
		}

	}



	/*ADDITIONAL STUFF ENDS HERE*/



	int a, b, c;                         /* Drawing the array in the console and writing the same data to the
										 .ppm file...*/
	for (a = 0; a < height; a++)
	{
		for (b = 0; b < width; b++)
		{
			for (c = 0; c < 3; c++)
			{
				fprintf(pfile, "%d", numbers[a][b][c]);
				fprintf(pfile, " ");
			}fprintf(pfile, "   ");
		}fprintf(pfile, "\n\n");
	}	                                                 /*The file can be found here  \Visual Studio 2015\Projects\ProjectName\ProjectName\myimage.ppm*/


	printf("Made Changes! \n\n\n");

	fclose(pfile);
}
